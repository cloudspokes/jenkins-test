<apex:page controller="CMC_AssetLibraryController" tabStyle="CMC_Asset__c"> 
<apex:sectionHeader title="Asset Library"/>
  
  <!--    <apex:stylesheet value="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8/themes/smoothness/jquery-ui.css"/>  -->
      <apex:stylesheet value="{!URLFOR($Resource.CMC_jQuery, '/jquery/themes/base/jquery-ui.css')}"/> 
    <apex:stylesheet value="{!URLFOR($Resource.FancyBox, 'fancybox/jquery.fancybox-1.3.4.css' )}"/>
    <style type="text/css">
        #searchBox{
            font-size:large;
            margin-top: 25px;
            margin-bottom: 25px;
        }
        #searchBox input{
            font-size:large;
            line-height:125%;
        }
        #searchBox p{
            font-size:x-small;
        }
        #searchButton{
            font-size:normal;
        }
        #searchResults{
            font-size:normal;
        }
        .activesearch a {
          font-weight: bold; 
          font-underline: none;
        }
        
        
    </style>

    <div id='searchBox'>
        <!-- <label for="search">Search:</label> -->
        <input id="search" size="100" placeholder="Search for..." /><input id="searchButton" class="btn" type="button" value="Search"></input>
        <p><strong>Tips:</strong> Multiple search terms should be separated with whitespace. The Tab key selects the first suggestion. The Enter key is equivalent to clicking the search button. A minimum of 2 characters are required.</p>
    </div>
    
    <apex:form >
        <apex:pageMessages id="errors" />
        <div id='nav-SearchResultsActive' style='display:none' >
           <a id="listView" href="#" onclick="showListView();" >List views </a> |    
           <a id="searchView" href="#" onclick="showSearchView();" style='font-weight: bold; text-decoration: none'> Search Results</a>
       </div>
         <div id='nav-ListViewActive' style='display:none' >
           <a id="listView" href="#" onclick="showListView();" style='font-weight: bold; text-decoration: none;'>List views </a> |    
           <a id="searchView" href="#" onclick="showSearchView();"> Search Results</a>  
       </div>
       
        <br /><br /><span id="searchMessage">
            </span><br /><br /> 
       
        <div id='searchResults' style='display:none' >
           
            <apex:pageBlock title="Search Results" mode="edit">    
                   <apex:pageBlock mode="edit" id="results" >
                    <apex:pageBlockTable value="{!ReusableAssets}" var="asset">
                        <apex:column value="{!asset.Id},{!asset.Preview_Media_Type__c}">
                        </apex:column>
                        <apex:column >
                            <apex:facet name="header">
                                <apex:commandLink value="Name" action="{!ToggleSort}" oncomplete="onSearchComplete()"  rerender="results,debug">
                                    <apex:param name="sortField" value="Name" assignTo="{!SortField}"/>
                                </apex:commandLink>
                            </apex:facet>
                            <apex:outputField value="{!asset.Name}"/>
                        </apex:column>
                        <apex:column >
                            <apex:facet name="header">
                                <apex:commandLink value="Description" action="{!ToggleSort}" oncomplete="onSearchComplete()"  rerender="results,debug">
                                    <apex:param name="sortField" value="Short_Description__c" assignTo="{!SortField}"/>
                                </apex:commandLink>
                            </apex:facet>
                            <apex:outputField value="{!asset.Short_Description__c}"/>
                        </apex:column>
                        <apex:column >
                            <apex:facet name="header">
                                <apex:commandLink value="Type" action="{!ToggleSort}" oncomplete="onSearchComplete()" rerender="results,debug">
                                    <apex:param name="sortField" value="Asset_Type__c" assignTo="{!SortField}"/>
                                </apex:commandLink>
                            </apex:facet>
                            <apex:outputField value="{!asset.Asset_Type__c}"/>
                        </apex:column>
                        <apex:column >
                            <apex:facet name="header">
                                <apex:commandLink value="Platform" action="{!ToggleSort}" oncomplete="onSearchComplete()" rerender="results,debug">
                                    <apex:param name="sortField" value="Asset_Platform__c" assignTo="{!SortField}"/>
                                </apex:commandLink>
                            </apex:facet>
                            <apex:outputField value="{!asset.Asset_Platform__c}"/>
                        </apex:column>
                        <apex:column >
                            <apex:facet name="header">
                                <apex:commandLink value="# of Stories Using" action="{!ToggleSort}" oncomplete="onSearchComplete()" rerender="results,debug">
                                    <apex:param name="sortField" value="Number_of_Uses__c" assignTo="{!SortField}"/>
                                </apex:commandLink>
                            </apex:facet>
                            <apex:outputField value="{!asset.Number_of_Uses__c}"/>
                        </apex:column>
                         
                       
                        <apex:column headerValue="Media" styleClass="mediaUrl" >
                            <apex:outputField styleClass="mediaUrl" value="{!asset.Preview_Media_URL__c}"/>
                        </apex:column>
                    </apex:pageBlockTable>
                </apex:pageBlock>
            </apex:pageBlock>
        </div>
        <!--       
        <apex:pageBlock title="Debug" id="debug">
                  <apex:outputText value="{!Debug}" />
        </apex:pageBlock>               
        -->
        <apex:actionFunction name="searchForReusableAssets" action="{!Search}" oncomplete="onSearchComplete()" rerender="results,debug,errors">
          <apex:param name="Terms" value="" />
        </apex:actionFunction>

    </apex:form>            
       <apex:includeScript value="{!URLFOR($Resource.CMC_jQuery, '/jquery/ui/minified/jquery.min.js')}"/> 
       <apex:includeScript value="{!URLFOR($Resource.CMC_jQuery, '/jquery/ui/minified/jquery-ui.min.js')}"/> 
      <!--   <apex:includeScript value="https://ajax.googleapis.com/ajax/libs/jquery/1.5/jquery.min.js" /> -->
     <!--   <apex:includeScript value="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js" />  -->
    <apex:includeScript value="{!URLFOR($Resource.FancyBox, 'fancybox/jquery.fancybox-1.3.4.js' )}" />

    <script type="text/javascript">
        
        function showListView(){
          $('#nav-ListViewActive').show(); 
          $('#nav-SearchResultsActive').hide();
          $('#searchMessage').hide();
          $('#listViewpanel').show(); 
          $('#searchResults').hide();
          
          
        }
        
        function showSearchView(){
            $('#listViewpanel').hide();
            $('#nav-ListViewActive').hide();
            $('#nav-SearchResultsActive').show();
            $('#searchMessage').show();
            $('#searchResults').show();
        }
        function log(msg){ try{ console.log(msg); }catch(x){} }
        function getResultsTable(){ return $('#searchResults table.list'); }
        
        function getHeaderRow(table){
            table = table || getResultsTable();
            return table.find('thead>tr');
        }
        
        function getResultRows(table){
            table = table || getResultsTable();
            return table.find('tbody>tr');
        }
        
        function onSearchComplete(){
            
            $('#searchButton, #search').attr('disabled', false);
            
            var resultsTable = getResultsTable();
            
            var rows = getResultRows(resultsTable);
            
            var searchMsg = $("#searchMessage");
            if (rows.size() == 1) {
              searchMsg.text('Search returned ' + rows.size() + ' row.');
            } else {
              searchMsg.text('Search returned ' + rows.size() + ' rows.');
              if (rows.size() == 0){
                $('#listViewpanel').hide(); 
              }
            }            
            
            if (rows.size() > 0){
                
                //the first column contains the recordId and mediatype
                //for each row, get recordId value and associate it with the row elem then remove the cell
                var temp, link, row, mediaType, mediaImage, rowIndex = 0;
                var col = resultsTable.find('th:nth-child(1),td:nth-child(1)');
                var len = col.size();
                for(var index = 0; index < len; ++index){
                    if ('td' == col[index].tagName.toLowerCase()){
                        temp = $(col[index]).text().split(',');
                        if (temp.length > 0){
                            row = rows.eq(rowIndex);
                            row.data('recordId', temp[0]);
                            if (temp.length > 1){
                                mediaType = temp[1];
                                switch(mediaType.toLowerCase()){
                                    case 'jpg':
                                    case 'png':
                                    case 'image':
                                        mediaType = 'image';
                                        mediaImage = '{!URLFOR($Resource.PictureIcon)}';
                                    break;
                                    case 'swf':
                                        mediaImage = '{!URLFOR($Resource.MovieIcon)}';
                                    break;
                                    default:
                                        mediaImage = null;
                                    break;
                                }//end switch
                                
                                if (mediaImage != null){  
                                    link = row.find('td.mediaUrl a');
                                    if (link.size() > 0){
                                        link.text('');
                                        link.append('<img src="' + mediaImage + '"></img>');
                                        
                                        if ('swf' === mediaType){
                                            temp = link.attr('href');
                                            if (temp.indexOf('youtube.com') > -1){
                                                temp = temp.replace(new RegExp("watch\\?v=", "i"), 'v/');
                                                link.attr('href', temp);
                                            }
                                        }
                                        link.fancybox({ type:mediaType });
                                    }
                               }
                                    
                                
                            }    
                        }
                        
                        rowIndex += 1;
                    }
                }
                col.remove();
                
                //make rows clickable
                rows.css('cursor', 'pointer')    
                
                
                rows.unbind();
                rows.click(function(event){

                    switch(event.target.tagName.toLowerCase()){
                        case 'a':
                        case 'img':
                            return false;
                        break;                        
                    }
                    
                    var id = $(this).data('recordId');
                    if (id){
                        //when rows are clicked, get the recordid from the row and navigate to the record page
                        window.location.href= '/' + id;
                        event.preventDefault();
                        return false;
                    }
                });
                
                
                $('#searchResults').show();  
                $('#nav-SearchResultsActive').show();         
                $('#listViewpanel').hide();
                $('#nav-ListViewActive').hide();
                
            }
            else{
                $('#searchResults').hide();
            }
        }
    
        $(document).ready(function() {
            
            var tagNames = [];
            var tagInfo, tagName, allTags = {!Tags};
            var len = allTags.length;
            for(var index = 0; index < len; ++index){
                tagInfo = allTags[index];
                tagName = tagInfo.name;
                if (-1 === $.inArray(tagName, tagNames)){
                    log('Adding tag: ' + tagInfo.name);
                    tagNames.push(tagInfo.name);
                }                
            }
            
            function split( val ) {
                //return val.split( /,\s*/ );
                return val.split( /\s+/ );
            }
            function extractLast( term ) {
                return split( term ).pop();
            }
      
            var searchButton = $('#searchButton');
            
            searchButton.click(function(){ doSearch(); });
      
            var search = $("#search");
            
            search.bind( "keydown", function( event ) {
                
                if (event.keyCode == $.ui.keyCode.ENTER){
                    
                    //if the user hits enter, search
                    doSearch();
                    event.preventDefault();
                }
                else if (event.keyCode == $.ui.keyCode.TAB){
                    var auto = $( this ).data( "autocomplete" );
                    if (auto.menu.active){
                        
                        // if the suggestion menu is visible and has a selection
                        // allow the user to hit tab to select it
                        event.preventDefault();
                    }
                    else if (auto.menu && auto.menu.element && auto.menu.element.length > 0){
                        var menuList = $(auto.menu.element[0]);
                        if (menuList.is(':visible')){
                            if (menuList.children().size() > 0){
                                
                                // if the suggestion menu is visible and does not have a selection
                                // allow the user to hit tab to select the first item 
                                doSearch(menuList.children().first().text());
                                event.preventDefault();
                            }                                
                        }
                    }
                }
            });
                        
            search.autocomplete(
            {
                minLength: 0,
                source: function( request, response ) {
                    // delegate back to autocomplete, but extract the last term
                    response( $.ui.autocomplete.filter(
                        tagNames, extractLast( request.term ) ) );
                },
                focus: function() {
                    // prevent value inserted on focus
                    return false;
                },
                select: function( event, ui ) {
                    doSearch(ui.item.value);
                    return false;
                }
            });       
            
            function doSearch(searchTerm){
                
                var terms = split( search.val() );

                
                if (searchTerm){
                    // remove the current input
                    terms.pop();
                
                    // add the selected item
                    terms.push(searchTerm);
                
                    // add placeholder to get the comma-and-space at the end
                    terms.push( "" );
                
                    search.val(terms.join( " " ));
                }
                
                if (terms.length > 0){
                                        
                    //clear out previous results
                    $('#searchResults').hide();

                    var searchTerms = terms.join(",");
                    log('Search terms: ' + searchTerms);
                    
                    search.attr('disabled', true);
                    searchButton.attr('disabled', true);
                    
                    searchForReusableAssets(searchTerms);
                }
            }
        });   
        
    </script>

    <br />
    <div id="listViewpanel">
       <apex:listViews type="CMC_Asset__c" />
    </div>
    
       
    

 
</apex:page>